// Round Robin Scheduling

#include <stdio.h>
int main() {
 int i, j, n, bu[10], wa[10], tat[10], t, ct[10], max;
 float awt = 0, att = 0, temp = 0;
 printf("Enter the number of processes: ");
 scanf("%d", &n);
 for (i = 0; i < n; i++) {
 printf("\nEnter Burst Time for process %d: ", i + 1);
 scanf("%d", &bu[i]);
 ct[i] = bu[i];
 }
 printf("\nEnter the size of time slice: ");
 scanf("%d", &t);
 max = bu[0];
 for (i = 1; i < n; i++)
 if (max < bu[i])
 max = bu[i];
 for (i = 0; i < (max / t) + 1; i++) {
 for (j = 0; j < n; j++) {
 if (bu[j] != 0) {
 if (bu[j] <= t) {
 tat[j] = temp + bu[j];
 temp += bu[j];
 bu[j] = 0;
 } else {
 bu[j] -= t;
 temp += t;
 }
 }
 }
 }
 for (i = 0; i < n; i++) {
 wa[i] = tat[i] - ct[i];
 att += tat[i];
 awt += wa[i];
 }
 printf("\nThe Average Turnaround time is -- %f", att / n);
 printf("\nThe Average Waiting time is -- %f ", awt / n);
 printf("\n\tPROCESS\t BURST TIME \t WAITING TIME\tTURNAROUND TIME\n");
 for (i = 0; i < n; i++)
 printf("\t%d \t %d \t\t %d \t\t %d \n", i + 1, ct[i], wa[i], tat[i]);
 return 0;
}